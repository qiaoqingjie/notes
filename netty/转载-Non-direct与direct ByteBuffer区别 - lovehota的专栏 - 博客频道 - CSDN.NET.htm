<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>转载-Non-direct与direct ByteBuffer区别 - lovehota的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="转载于：http://crmky.spaces.live.com/Blog/cns!8C989768DB1A6B14!458.entry?sa=254330365这两种类型的ByteBuffer相信大家都知道，但是两者的区别在什么地方呢？在不同的环境下采用哪种类型的ByteBuffer会更有效率呢？先解释一下两者的区别：Non-directByteBuffer内存是分配在堆上的，直接由Ja" />
<script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
<script src="http://static.blog.csdn.net/scripts/plugins.js" type="text/javascript"></script>
<script src="http://static.blog.csdn.net/scripts/common.js?v=1.2" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/lovehota/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>
<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="/lovehota">lovehota的专栏</a></h1>
            <h2></h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="/lovehota?viewmode=contents"><span><img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="/lovehota?viewmode=list"><span><img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="/lovehota/rss/list"><span><img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "lovehota";
    var blog_address = "http://blog.csdn.net/lovehota";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>
        
<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="http://blog.csdn.net/blogdevteam/article/details/8424776" target="_blank">
<font color=blue>
2013年4月微软MVP申请开始啦！   </font></a>

&nbsp;&nbsp;

<a href="http://bbs.csdn.net/topics/390330213
" target="_blank"><font color=red>写给13岁的CSDN论坛 </font></a>

&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/8424675
" target="_blank"><font color=red>CSDN博客频道年终送好礼！</font></a>


<br />





<a href="http://vote.blog.csdn.net/details/blogstar"target="_blank">
<font color=red>2012CSDN博客之星评选正式上线 </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/zhangoi391/article/details/8161343"target="_blank">
<font color=red>2000元大奖征异构开发博文  </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://huiyi.csdn.net/cmdn/view/183"target="_blank">
<font color=red>Q14年互联网产品进化史   </font></a>

</div><div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Repost"></span>
    <h3>
        <span class="link_title"><a href="/lovehota/article/details/7407574">
        转载-Non-direct与direct ByteBuffer区别
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
    <span class="link_postdate">2012-03-29 15:52</span>
    <span class="link_view" title="阅读次数">173人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments">评论</a>(1)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('转载-Non-direct与direct ByteBuffer区别','7407574');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:report(7407574,2);return false;" title="举报">举报</a></span>
    
</div>


    
<div id="article_content" class="article_content">

<div class="tit">&nbsp;</div>
<div class="date">&nbsp;</div>
<table class=" " style="width:100%; table-layout:fixed">
<tbody>
<tr>
<td>
<div id="blog_text" class="cnt">
<p><span><span><span style="font-family:宋体">转载于：<span><a href="http://crmky.spaces.live.com/Blog/cns!8C989768DB1A6B14!458.entry?sa=254330365">http://crmky.spaces.live.com/Blog/cns!8C989768DB1A6B14!458.entry?sa=254330365</a></span></span></span></span><span><span><span style="font-family:宋体">这两种类型的<span><span>ByteBuffer</span></span>相信大家都知道，但是两者的区别在什么地方呢？在不同的环境下采用哪种类型的<span><span>ByteBuffer</span></span>会更有效率呢？</span></span></span></p>
<p><span><span><span style="font-family:宋体">先解释一下两者的区别：</span></span></span></p>
<p><span><span style="font-family:宋体"><span><span>Non-direct</span></span><span><span>ByteBuffer</span></span><span>内存是分配在堆上的，直接由<span>Java</span>虚拟机负责垃圾收集，你可以把它想象成一个字节数组的包装类，如下伪码所示：</span></span></span></p>
<p><span><span><span style="font-family:宋体">HeapByteBuffer extends <span>ByteBuffer</span> {<br>
&nbsp;&nbsp;&nbsp; byte[] content;<br>
&nbsp;&nbsp;&nbsp; int position, limit, capacity;<br>
&nbsp;&nbsp;&nbsp; ......<br>
}</span></span></span></p>
<p><span><span><span style="font-family:宋体">而<span><span>Direct</span></span><span><span>ByteBuffer</span></span>是通过<span>JNI</span>在<span>Java</span>虚拟机外的内存中分配了一块（所以即使在运行时通过<span>-Xmx</span>指定了<span>Java</span>虚拟机的最大堆内存，还是<span>可能</span>实例化超出该大小的<span><span>Direct</span></span><span><span>ByteBuffer</span></span>），该内存块并不直接由<span>Java</span>虚拟机负责垃圾收集，但是在<span><span>Direct</span></span><span><span>ByteBuffer</span></span>包装类被回收时，会通过<span>Java
 Reference</span>机制来释放该内存块。如下伪码所示：</span></span></span></p>
<p><span><span style="font-family:宋体"><span>DirectByteBuffer extends <span>ByteBuffer</span> {<br>
&nbsp;&nbsp;&nbsp; long address;<br>
&nbsp;&nbsp;&nbsp; int position, limit, capacity;<br>
<br>
&nbsp;&nbsp;&nbsp; protected void finalize() throws Throwable{<br>
<span>//</span></span><span>释放内存块，该段代码仅仅用于演示，真正的<span><span>Direct</span></span><span><span>ByteBuffer</span></span>并不是通过<span>finalize</span>来释放的</span></span></span><span><br>
<span><span style="font-family:宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; releaseAddress();&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ......<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; ......<br>
}</span></span></span></p>
<p><span><span><span style="font-family:宋体">我相信大部分朋友们对上面的区别都应该很了解，那么还有什么其他的区别呢？嘿嘿，让我们稍微深入一点，翻到<span>sun.nio.ch.IOUtil.java</span>，绝大部分<span>Channel</span>类都是通过这个工具类和外界进行通讯的，如<span>FileChannel/SocketChannel</span>等等。我简单的用伪码把<span>write</span>方法给表达出来（<span>read</span>方法也差不多，就不多做说明了）</span></span></span></p>
<p><span><span><span style="font-family:宋体">int write(<span>ByteBuffer</span> src, ......) {<br>
&nbsp;&nbsp;&nbsp; if (src instanceof DirectBuffer)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return writeFromNativeBuffer(...);<br>
&nbsp;&nbsp;&nbsp;<span>ByteBuffer</span><span>direct</span> = getTemporaryDirectBuffer(src);<br>
&nbsp;&nbsp;&nbsp; writeFromNativeBuffer(<span>direct</span>,......);<br>
&nbsp;&nbsp;&nbsp; updatePosition(src);<br>
&nbsp;&nbsp;&nbsp; releaseTemporaryDirectBuffer(<span>direct</span>);<br>
}</span></span></span></p>
<p><span><span><span style="font-family:宋体">是的，在发送和接收前会把<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span>转换为<span><span>Direct</span></span><span><span>ByteBuffer</span></span>，然后再进行相关的操作，最后更新原始<span><span>ByteBuffer</span></span>的<span>position</span>。这意味着什么？假设我们要从网络中读入一段数据，再把这段数据发送出去的话，采用<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span>的流程是这样的：</span></span></span></p>
<p><span><span style="font-family:宋体"><span>&nbsp;</span><span>网络 <span>--&gt;</span> 临时的<span><span>Direct</span></span><span><span>ByteBuffer</span> --&gt;</span> 应用
<span><span>Non-direct</span></span><span><span>ByteBuffer</span> --&gt;</span> 临时的<span><span>Direct</span></span><span><span>ByteBuffer</span> --&gt;</span> 网络</span></span></span></p>
<p><span><span><span style="font-family:宋体">而采用<span><span>Direct</span></span><span><span>ByteBuffer</span></span>的流程是这样的：</span></span></span></p>
<p><span><span><span style="font-family:宋体">网络 <span>--&gt;</span> 应用 <span><span>Direct</span></span><span><span>ByteBuffer</span> --&gt;</span> 网络</span></span></span></p>
<p><span><span><span style="font-family:宋体">可以看到，除开构造和析构临时<span><span>Direct</span></span><span><span>ByteBuffer</span></span>的时间外，起码还能节约两次内存拷贝的时间。那么是否在任何情况下都采用<span><span>Direct</span></span><span>Buffer</span>呢？</span></span></span></p>
<p><span><span><span style="font-family:宋体">不是。对于大部分应用而言，两次内存拷贝的时间几乎可以忽略不计，而构造和析构<span><span>Direct</span></span><span>Buffer</span>的时间却相对较长。在<span>JVM</span>的实现当中，某些方法会缓存一部分临时<span><span>Direct</span></span><span><span>ByteBuffer</span></span>，意味着如果采用<span><span>Direct</span></span><span><span>ByteBuffer</span></span>仅仅能节约掉两次内存拷贝的时间，而无法节约构造和析构的时间。就用<span>Sun</span>的实现来说，<span>write(<span>ByteBuffer</span>)</span>和<span>read(<span>ByteBuffer</span>)</span>方法都会缓存临时<span><span>Direct</span></span><span><span>ByteBuffer</span></span>，而<span>write(<span>ByteBuffer</span>[])</span>和<span>read(<span>ByteBuffer</span>[])</span>每次都生成新的临时<span><span>Direct</span></span><span><span>ByteBuffer</span></span>。</span></span></span></p>
<p><span><span><span style="font-family:宋体">根据这些区别，我会提出如下的建议：</span></span></span></p>
<p><span><span>·<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span><span><span style="font-family:宋体">如果你做中小规模的应用（在这里，应用大小是按照使用<span><span>ByteBuffer</span></span>的次数和规模来做划分的），而且并不在乎这该死的细节问题，请选择<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span></span></span></span><span><span>·<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span><span><span style="font-family:宋体">如果采用<span><span>Direct</span></span><span><span>ByteBuffer</span></span>后性能并没有出现你所期待的变化，请选择<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span></span></span></span><span><span>·<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span><span><span style="font-family:宋体">如果没有<span><span>Direct</span></span><span><span>ByteBuffer</span>
 Pool</span>，尽量不要使用<span><span>Direct</span></span><span><span>ByteBuffer</span></span></span></span></span><span><span>·<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span><span><span style="font-family:宋体">除非你确定该<span><span>ByteBuffer</span></span>会长时间存在，并且和外界有频繁交互，可采用<span><span>Direct</span></span><span><span>ByteBuffer</span></span></span></span></span><span><span>·<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span><span><span style="font-family:宋体">如果采用<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span>，那么采用非聚集<span>(gather)</span>的<span>write/read(<span>ByteBuffer</span>)</span>效果反而可能超出聚集的<span>write/read(<span>ByteBuffer</span>[])</span>，因为聚集的<span>write/read</span>的临时<span><span>Direct</span></span><span><span>ByteBuffer</span></span>是非缓存的</span></span></span></p>
<p><span><span><span style="font-family:宋体">基本上，采用<span><span>Non-direct</span></span><span><span>ByteBuffer</span></span>总是对的！因为内存拷贝需要的开销对大部分应用而言都可以忽略不计。不过我做的是大规模的网络并发框架，因此对这些细节问题还是有必要有深入认识的，并且根据这些细节来调节自己的<span>Buffer</span>继承体系（再次抱怨，<span><span>ByteBuffer</span></span>无法扩展实在是一个非常非常非常费解的设计）</span></span></span></p>
<p><span><span><span style="font-family:宋体">&nbsp;</span></span></span></p>
<p><span><span><span style="font-family:宋体">注：前面提到的<span>“</span>即使在运行时通过<span>-Xmx</span>指定了<span>Java</span>虚拟机的最大堆内存，还是<span>可能</span>实例化超出该大小的<span><span>Direct</span></span><span><span>ByteBuffer</span>”</span>中的可能是指可以通过<span>-XX:MaxDirectMemorySize=&lt;size&gt;</span>来指定<span><span>Direct</span></span><span><span>ByteBuffer</span></span>实例最多可以使用的内存总数。如指定<span>-XX:MaxDirectMemorySize=1024</span>，则系统中所有存活的<span><span>Direct</span></span><span><span>ByteBuffer</span></span>总内存数不能超过<span>1024</span>字节<span><span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
</div>
</td>
</tr>
</tbody>
</table>

</div>
<div class="share_buttons" id="sharePanel"></div>
<!--192.168.1.237-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="/lovehota/article/details/7407562">glViewport()函数和glOrtho()函数的理解(转)</a></li>
    <li class="next_article"><span>下一篇：</span><a href="/lovehota/article/details/7425783">程序员应学会养生</a></li>
</div>


    
</div>
<div id="ad_cen"></div>
<script type="text/javascript">
    new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"></div>
<div id="comment_bar"></div>
<div id="comment_form"></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '7407574';
    var commentscount = 1;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js?v=1.8"></script>
<div id="ad_bot"></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top">
<a href="#" onclick="javascript:document.body.scrollTop=0;document.documentElement.scrollTop=0;this.blur();return false;" title="回到顶部">
<img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>



<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="panel_Profile" class="panel">
    <ul class="panel_head"><span>个人资料</span></ul>
    <ul class="panel_body profile">
        <div id="blog_userface">
            <a href="http://my.csdn.net/lovehota" target="_blank">
            <img src="http://avatar.csdn.net/E/A/8/1_lovehota.jpg" title="访问我的空间" style="max-width:90%"/>
            </a>
            <br />
            <span><a href="http://my.csdn.net/lovehota" class="user_name" target="_blank">lovehota</a></span>
        </div>
<div class="interact">
<!--<a href="#" class="attented" title="已关注"></a>-->
<a href="#" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="http://my.csdn.net/my/letter/send/lovehota" class="letter" title="[发私信]"></a>
</div>
        <div id="blog_medal">
        </div>
        <ul id="blog_rank">
            <li>访问：<span>7570次</span></li>
            <li>积分：<span>170分</span></li>
            <li>排名：<span>千里之外</span></li>
        </ul>
        <ul id="blog_statistics">
            <li>原创：<span>7篇</span></li>
            <li>转载：<span>17篇</span></li>
            <li>译文：<span>0篇</span></li>
            <li>评论：<span>3条</span></li>
        </ul>
    </ul>
</div>
<script type="text/javascript">
    var _blogger = 'lovehota';
</script>
<script type='text/javascript'>
$(document).ready(function () {
    var un = getUN().toLowerCase();
    if (un == _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if(un) {
        var url = "http://my.csdn.net/index.php/follow/check_is_followed/" + encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + "?jsonpcallback=?";
        $.getJSON(url, {}, function (data) {
            if (data.succ == 1 && data.info == 1) {
                $('#span_add_follow').attr('class', 'attented');
            } else {
                $('#span_add_follow').click(guanzhu);
            }
        }, 'json');
    }
});
function guanzhu() {
    var url = "http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=?";
    $.getJSON(url, { "username": _blogger }, function (data) {
        if (data.succ == 1) {
            alert('关注成功！');
            $('#span_add_follow').attr('class', 'attented').click(function () { return false; });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m = document.cookie.match(new RegExp("(^| )UserName=([^;]*)(;|$)"));
    if (m) return m[2];
    else return '';
}
</script>

<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>文章分类</span></ul>
    <ul class="panel_body">
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/883446">java模式设计</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/1066743">geo_pro</a><span>(1)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/1110829">程序员必读</a><span>(2)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/1116318">编程问题和算法</a><span>(1)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/1118483">各种笔记</a><span>(1)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lovehota/article/category/1145361">android</a><span>(7)</span>
        </li>
    </ul>
</div><div id="panel_Archive" class="panel">
    <ul class="panel_head"><span>文章存档</span></ul>
    <ul class="panel_body">
        <div id="archive_list">
        <!--归档统计-->
        <li><a href="http://blog.csdn.net/lovehota/article/month/2012/05">2012年05月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lovehota/article/month/2012/04">2012年04月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/lovehota/article/month/2012/03">2012年03月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lovehota/article/month/2012/01">2012年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lovehota/article/month/2011/09">2011年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/lovehota/article/month/2011/07">2011年07月</a><span>(5)</span></li>
        </div>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>阅读排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="/lovehota/article/details/7425783" title="程序员应学会养生">程序员应学会养生</a><span>(1308)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7211727" title="Android内存溢出的解决方法（VMRuntime.getRuntime().setMinimumHeapSize(CWJ_HEAP_SIZE);">Android内存溢出的解决方法（VMRuntime.getRuntime().setMinimumHeapSize(CWJ_HEAP_SIZE);</a><span>(1247)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7561025" title="通过SVN导入两个项目（从java移植到andorid)时，一个android，一个普通java项目时可能遇到的两个问题">通过SVN导入两个项目（从java移植到andorid)时，一个android，一个普通java项目时可能遇到的两个问题</a><span>(753)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7560944" title="关于问题“应用程序未安装或安装时出现「INSTALL_FAILED_CONTAINER_ERROR」”的解决方案方面的事情">关于问题“应用程序未安装或安装时出现「INSTALL_FAILED_CONTAINER_ERROR」”的解决方案方面的事情</a><span>(627)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7561661" title="毁人的switch-case，注意点">毁人的switch-case，注意点</a><span>(522)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7434955" title="公开课，算法导论笔记(自用）">公开课，算法导论笔记(自用）</a><span>(477)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/6618687" title="eclipse SVN快速入门（eclipse下的SVN操作，已安装后）">eclipse SVN快速入门（eclipse下的SVN操作，已安装后）</a><span>(471)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7407521" title="浅谈eclipse生成的.classpath文件 （转">浅谈eclipse生成的.classpath文件 （转</a><span>(445)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7407507" title="加载纹理与使用glGenTextures时应注意的一点(解决吃内存)[转]">加载纹理与使用glGenTextures时应注意的一点(解决吃内存)[转]</a><span>(194)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7407574" title="转载-Non-direct与direct ByteBuffer区别">转载-Non-direct与direct ByteBuffer区别</a><span>(173)</span>
        </li>
    </ul>
</div>
<div id="hotarticls2" class="panel">
    <ul class="panel_head"><span>评论排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="/lovehota/article/details/7567651" title="快速设置Button OnClick方法，利用xml配置文件">快速设置Button OnClick方法，利用xml配置文件</a><span>(1)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7407574" title="转载-Non-direct与direct ByteBuffer区别">转载-Non-direct与direct ByteBuffer区别</a><span>(1)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7561025" title="通过SVN导入两个项目（从java移植到andorid)时，一个android，一个普通java项目时可能遇到的两个问题">通过SVN导入两个项目（从java移植到andorid)时，一个android，一个普通java项目时可能遇到的两个问题</a><span>(1)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/6593132" title="android animation 简单介绍">android animation 简单介绍</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7425783" title="程序员应学会养生">程序员应学会养生</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7425802" title="慎用++运算符，java和C++中的一个对比">慎用++运算符，java和C++中的一个对比</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7425825" title="求a的n次方的两种算法对比">求a的n次方的两种算法对比</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7434955" title="公开课，算法导论笔记(自用）">公开课，算法导论笔记(自用）</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7560944" title="关于问题“应用程序未安装或安装时出现「INSTALL_FAILED_CONTAINER_ERROR」”的解决方案方面的事情">关于问题“应用程序未安装或安装时出现「INSTALL_FAILED_CONTAINER_ERROR」”的解决方案方面的事情</a><span>(0)</span>
        </li>
        <li>
            <a href="/lovehota/article/details/7561166" title="android,内存优化详解 .">android,内存优化详解 .</a><span>(0)</span>
        </li>
    </ul>
</div>
<div id="homepageArticles" class="panel">
    <ul class="panel_head"><span>推荐文章</span></ul>
    <ul class="panel_body" id="ad_commend">
    </ul>
</div>
<script type="text/javascript">
    new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="/lovehota/article/details/7567651#comments">快速设置Button OnClick方法，利用xml配置文件</a>
    <p style="margin:0px;"><a href="/wan316468509" class="user_name">wan316468509</a>:
提问~~showNextEffect 是放在哪里的？对应的Activity里么？
    </p>
    </li>
    <li>
    <a href="/lovehota/article/details/7407574#comments">转载-Non-direct与direct ByteBuffer区别</a>
    <p style="margin:0px;"><a href="/wdongnian" class="user_name">wdongnian</a>:
direct io 是借鉴了Linux的 直接IO操作 。一般的IO系统调用都是用户态和内核态的复制...
    </p>
    </li>
    <li>
    <a href="/lovehota/article/details/7561025#comments">通过SVN导入两个项目（从java移植到andorid)时，一个android，一个普通java项目时可能遇到的两个问题</a>
    <p style="margin:0px;"><a href="/cici_lr" class="user_name">cici_lr</a>:
目前正遇到java project移植到android上时出现no method found 错误，...
    </p>
    </li>
</ul>
</div>
</div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/SyntaxHighlighter/shCore-src.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/article_code.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>

<script type="text/javascript" src="http://medal.blog.csdn.net/scripts/show.js"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=1043792"></script>

<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js"></script>

<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>

<!--ad.csdn.net-->
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>



</div>
</body>
</html>